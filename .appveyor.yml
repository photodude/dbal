build: false
platform:
  - x64
#matrix:
#  fast_finish: true # kills the build at the first failure
clone_folder: C:\projects\dbal

## Build matrix for lowest and highest possible targets
environment:
  dependencies: current
  matrix:
  - db: mssql
    driver: pdo_sqlsrv
    db_version: mssql2014
    php_ver_target: 7.0
  - db: mssql
    driver: pdo_sqlsrv
    db_version: mssql2014
    php_ver_target: 7.1
  - db: mssql
    driver: sqlsrv
    db_version: mssql2014
    php_ver_target: 7.0
  - db: mssql
    driver: sqlsrv
    db_version: mssql2014
    php_ver_target: 7.1
  - db: sqlite
    driver: pdo_sqlite
    php_ver_target: 7.0
  - db: sqlite
    driver: pdo_sqlite
    php_ver_target: 7.1
  - db: mysql
    driver: pdo_mysql
    php_ver_target: 7.0
  - db: mysql
    driver: pdo_mysql
    php_ver_target: 7.1
  - db: mysql
    driver: mysqli
    php_ver_target: 7.0
  - db: mysql
    driver: mysqli
    php_ver_target: 7.1
  - db: mariadb
    driver: pdo_mysql
    php_ver_target: 7.0
  - db: mariadb
    driver: pdo_mysql
    php_ver_target: 7.1
  - db: postgresql
    driver: pdo_pgsql
    php_ver_target: 7.0
  - db: postgresql
    driver: pdo_pgsql
    php_ver_target: 7.1

## Cache composer bits
#cache:
#    - '%LOCALAPPDATA%\Composer\files -> composer.lock'
init:
  - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;%PATH%
  - SET COMPOSER_NO_INTERACTION=1
  - SET PHP=1
  - SET ANSICON=121x90 (121x90)
services:
#  - mssql2014
#  - mysql
#  - postgresql94

## Install PHP and composer, and run the appropriate composer command
install:
    - IF EXIST c:\tools\php (SET PHP=0)
    - ps: appveyor-retry cinst --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $Env:php_ver_target | Select-Object -first 1) -replace '[php|]','')
    - cinst -y sqlite
    - ps: If ($env:db -like "mariadb") {cinst -y mariadb}
    - cd c:\tools\php
    #get the MSSQL DLL's
    - ps: >-
        If ($env:php_ver_target -eq "7.0" –and $env:db -like "mssql" –and $env:PHP -eq "1") {
          cd c:\tools\php\ext\
          cinst -y wget
          wget -O php_sqlsrv_nts.dll "http://aka.ms/php_sqlsrv_7_nts.dll"
          wget -O php_pdo_sqlsrv_nts.dll "https://aka.ms/php_pdo_sqlsrv_7_nts.dll"
          Get-ChildItem -Path c:\tools\php\ext\
          cd c:\tools\php\}
    - ps: >-
        If ($env:php_ver_target -eq "7.1" –and $env:db -like "mssql" –and $env:PHP -eq "1") {
          cd c:\tools\php\ext\
          cinst -y wget
          wget -O php_sqlsrv_nts.dll "http://aka.ms/php_sqlsrv_71_nts.dll"
          wget -O php_pdo_sqlsrv_nts.dll "https://aka.ms/php_pdo_sqlsrv_71_nts.dll"
          Get-ChildItem -Path c:\tools\php\ext\
          cd c:\tools\php\}
    #Set PHP environment
    - IF %PHP%==1 copy php.ini-production php.ini /Y
    - IF %PHP%==1 echo date.timezone="UTC" >> php.ini
    - IF %PHP%==1 echo extension_dir=ext >> php.ini
    - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini
    - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_mysql.dll >> php.ini
    - ps: >-
        If ($env:db -like "mssql" –and $env:PHP -eq "1") {
            echo extension=php_pdo_sqlsrv_nts.dll >> php.ini
            echo extension=php_sqlsrv_nts.dll >> php.ini}
    - echo extension=php_pdo_sqlsrv_nts.dll >> php.ini
    #- echo extension=php_sqlsrv_nts.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_pgsql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_sqlite.dll >> php.ini
    - IF %PHP%==1 echo extension=php_sqlite3.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mysqli.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pgsql.dll >> php.ini
    - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat
    - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar
    - cd c:\projects\dbal
    - IF %dependencies%==lowest appveyor-retry composer update --prefer-lowest --no-progress --profile -n
    - IF %dependencies%==current appveyor-retry composer install --no-progress --profile
    - IF %dependencies%==highest appveyor-retry composer update --no-progress --profile -n
    - php -m

before_test:
  - ps: >-
      If ($env:db -like "mssql") {
        net start 'MSSQL$SQL2014'}
      Elseif ($env:db -like "mysql") {
        Start-Service MySQL57}
      Elseif ($env:db -like "postgresql") {
        Start-Service postgresql-x64-9.4}

test_script:
  - cd C:\projects\dbal
  - ps: >-
      If ($env:db_version) {vendor\bin\phpunit -c tests\appveyor\%db%.%db_version%.%driver%.appveyor.xml}
      Else {vendor\bin\phpunit -c tests\appveyor\%db%.%driver%.appveyor.xml}
