build: false
platform:
  - x64
#matrix:
#  fast_finish: true # kills the build at the first failure
clone_folder: C:\projects\dbal

cache:
  - C:\ProgramData\chocolatey\bin -> .appveyor.yml
  - C:\ProgramData\chocolatey\lib -> .appveyor.yml
  - c:\tools\php -> .appveyor.yml
  - '%LOCALAPPDATA%\Composer'
  - vendor

## Build matrix for lowest and highest possible targets
environment:
  matrix:
  - db: sqlite
    driver: pdo_sqlite
    php_ver_target: 7.0
  - db: sqlite
    driver: pdo_sqlite
    php_ver_target: 7.1
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2008r2sp2
#    php_ver_target: 7.0
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2008r2sp2
#    php_ver_target: 7.1
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2008r2sp2
#    php_ver_target: 7.0
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2008r2sp2
#    php_ver_target: 7.1
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2012sp1
#    php_ver_target: 7.0
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2012sp1
#    php_ver_target: 7.1
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2012sp1
#    php_ver_target: 7.0
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2012sp1
#    php_ver_target: 7.1
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2014
#    php_ver_target: 7.0
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2014
#    php_ver_target: 7.1
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2014
#    php_ver_target: 7.0
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2014
#    php_ver_target: 7.1
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2016
#    php_ver_target: 7.0
#  - db: mssql
#    driver: sqlsrv
#    db_version: sql2016
#    php_ver_target: 7.1
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2016
#    php_ver_target: 7.0
#  - db: mssql
#    driver: pdo_sqlsrv
#    db_version: sql2016
#    php_ver_target: 7.1
#  - db: mysql
#    driver: pdo_mysql
#    php_ver_target: 7.0
#  - db: mysql
#    driver: pdo_mysql
#    php_ver_target: 7.1
#  - db: mysql
#    driver: mysqli
#    php_ver_target: 7.0
#  - db: mysql
#    driver: mysqli
#    php_ver_target: 7.1
#  - db: mariadb
#    driver: pdo_mysql
#    php_ver_target: 7.0
#  - db: mariadb
#    driver: pdo_mysql
#    php_ver_target: 7.1
#  - db: postgresql
#    driver: pdo_pgsql
#    php_ver_target: 7.0
#  - db: postgresql
#    driver: pdo_pgsql
#    php_ver_target: 7.1

init:
  - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;%PATH%
  - SET COMPOSER_NO_INTERACTION=1
  - SET PHP=1
  - SET ANSICON=121x90 (121x90)
services:
# Services are started selectively at the before_test stage
#  - mssql2014
#  - mysql
#  - postgresql94

## Install PHP and composer, and run the appropriate composer command
install:
    - IF EXIST c:\tools\php (SET PHP=0)
    - ps: appveyor-retry cinst --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $Env:php_ver_target | Select-Object -First 1) -replace '[php|]','')
    - cinst -y sqlite
    - ps: If ($env:db -like "mariadb") {cinst -y mariadb}
    - cd c:\tools\php
    #get the MSSQL DLL's
    - ps: >-
        If ($env:php_ver_target -eq "7.0" –and $env:db -like "mssql") {
          appveyor DownloadFile https://github.com/Microsoft/msphpsql/releases/download/4.1.5-Windows/7.0.zip
          7z x 7.0.zip > $null
          copy 7.0\x64\php_pdo_sqlsrv_7_nts.dll ext\php_pdo_sqlsrv_nts.dll
          copy 7.0\x64\php_sqlsrv_7_nts.dll ext\php_sqlsrv_nts.dll
          Remove-Item c:\tools\php\* -include .zip}
    - ps: >-
        If ($env:php_ver_target -eq "7.1" –and $env:db -like "mssql") {
          appveyor DownloadFile https://github.com/Microsoft/msphpsql/releases/download/4.1.5-Windows/7.1.zip
          7z x 7.1.zip > $null
          copy 7.1\x64\php_pdo_sqlsrv_71_nts.dll ext\php_pdo_sqlsrv_nts.dll
          copy 7.1\x64\php_sqlsrv_71_nts.dll ext\php_sqlsrv_nts.dll
          Remove-Item c:\tools\php\* -include .zip}
    #Set PHP environment
    - IF %PHP%==1 copy php.ini-production php.ini /Y
    - IF %PHP%==1 echo date.timezone="UTC" >> php.ini
    - IF %PHP%==1 echo extension_dir=ext >> php.ini
    - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini
    - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_mysql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mysqli.dll >> php.ini
    - ps: If ($env:db -like "mssql") {Add-Content php.ini "`nextension=php_sqlsrv_nts.dll";}
    - ps: If ($env:db -like "mssql") {Add-Content php.ini "`nextension=php_pdo_sqlsrv_nts.dll";}
    - IF %PHP%==1 echo extension=php_pdo_pgsql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pgsql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_sqlite.dll >> php.ini
    - IF %PHP%==1 echo extension=php_sqlite3.dll >> php.ini
    - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat
    - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar
    - cd c:\projects\dbal
    - appveyor-retry composer install --no-progress --profile

before_test:
# Selectively start the services
  - ps: >-
      If ($env:db -like "mssql") {
        $instanceName = $env:db_version.ToUpper();
        Start-Service "MSSQL`$$instanceName"}
      Elseif ($env:db -like "mysql") {Start-Service MySQL57}
      Elseif ($env:db -like "postgresql") {Start-Service postgresql-x64-9.4}

test_script:
  - php -v
  - cd C:\projects\dbal
  - ps: >-
      If ($env:db_version) {vendor\bin\phpunit -c tests\appveyor\%db%.%db_version%.%driver%.appveyor.xml}
      Else {vendor\bin\phpunit -c tests\appveyor\%db%.%driver%.appveyor.xml}
